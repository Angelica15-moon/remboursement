[{"C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\index.js":"1","C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\Connexion.js":"3","C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\App.js":"4","C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\Insertion.js":"5","C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\Payments.js":"6","C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\Clients.js":"7","C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\HistoryPaiment.js":"8"},{"size":701,"mtime":1699871603593,"results":"9","hashOfConfig":"10"},{"size":375,"mtime":1699871603594,"results":"11","hashOfConfig":"10"},{"size":2485,"mtime":1699871603581,"results":"12","hashOfConfig":"10"},{"size":2352,"mtime":1700028828158,"results":"13","hashOfConfig":"10"},{"size":2550,"mtime":1700045684358,"results":"14","hashOfConfig":"10"},{"size":8473,"mtime":1700044716915,"results":"15","hashOfConfig":"10"},{"size":4619,"mtime":1700044929235,"results":"16","hashOfConfig":"10"},{"size":2048,"mtime":1700038706779,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f934xc",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\index.js",[],[],"C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\Connexion.js",[],[],"C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\App.js",["44","45","46","47"],[],"C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\Insertion.js",[],[],"C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\Payments.js",[],[],"C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\Clients.js",["48"],[],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport DataTable from 'react-data-table-component';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction ClientList() {\r\n  const [clients, setClients] = useState([]);\r\n  const [dataFil, setFilterData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Effectuez une requête GET vers votre API pour récupérer les données de la table excel_data\r\n    axios.get('http://localhost:3002/excel-data') // Remplacez l'URL par l'URL de votre API\r\n      .then(response => {\r\n        setClients(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Erreur lors de la récupération des données de la table excel_data :', error);\r\n      });\r\n  }, []);\r\n\r\n  const clientList = clients.map(client => new Client(\r\n    client.RefClient, client.RefCredit, client.nom,\r\n    client.MontantAbandonnee, client.DatePassagePerte,\r\n    client.CAResponsable, client.Agence, client.Type\r\n  ));\r\n\r\n  const columns = [\r\n    { name: 'Ref Client', selector: row => row.refClient, sortable: true },\r\n    { name: 'Ref Credit', selector: row => row.refCredit, sortable: true },\r\n    { name: 'Nom', selector: row => row.nom, sortable: true },\r\n    { name: 'Montant Abandonné', selector: row => row.montantAbandonnee, sortable: true },\r\n    { name: 'Date Passage Perte', selector: row => row.datePassagePerte, sortable: true },\r\n    { name: 'CA Responsable', selector: row => row.caResponsable, sortable: true },\r\n    { name: 'Agence', selector: row => row.agence, sortable: true },\r\n    { name: 'Type', selector: row => row.type, sortable: true }\r\n  ];\r\n\r\n  const paginationComponentOptions = {\r\n    rowsPerPageText: 'Lignes par page',\r\n    rangeSeparatorText: 'sur',\r\n    selectAllRowsItem: true,\r\n    selectAllRowsItemText: 'Tous',\r\n  };\r\n\r\n  function handleFiilter(event) {\r\n    const dataFilter = clientList.filter(row => {\r\n      return row.refClient.toLowerCase().includes(event.target.value.toLowerCase()) || row.refCredit.toLowerCase().includes(event.target.value.toLowerCase());\r\n    });\r\n    setFilterData(dataFilter);\r\n  }\r\n\r\n  return (\r\n    <div className='p-3'>\r\n      <Card>\r\n        <Card.Header>Liste des Clients</Card.Header>\r\n          <Row className='mb-3 px-3'>\r\n            <Col>\r\n              <Form.Label htmlFor=\"ref-client\">Referecnce client</Form.Label>\r\n              <Form.Select id='ref-client' aria-label=\"Referecnce client\" size='sm' onChange={handleFiilter}>\r\n                <option>RefClient</option>\r\n                {clientList.map((opt) => (\r\n                  <option key={opt.refClient} value={opt.refClient}>\r\n                    {opt.refClient}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n            </Col>\r\n            <Col>\r\n              <Form.Label htmlFor=\"ref-credit\">Referecnce credit</Form.Label>\r\n              <Form.Select id='ref-client' aria-label=\"Referecnce credit\" size='sm' onChange={handleFiilter}>\r\n                <option>RefCredit</option>\r\n                {clientList.map((opt) => (\r\n                  <option key={opt.refCredit} value={opt.refCredit}>\r\n                    {opt.refCredit}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n            </Col>\r\n            <Col>\r\n              <Form.Label htmlFor=\"autre-critere\">Autre critère</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                id=\"autre-critere\"\r\n                aria-describedby=\"autre critere de recherche\"\r\n                size='sm'\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <DataTable\r\n            columns={columns}\r\n            data={clientList}\r\n            dense\r\n            direction=\"auto\"\r\n            pagination\r\n            paginationComponentOptions={paginationComponentOptions}\r\n            fixedHeader\r\n            fixedHeaderScrollHeight=\"400px\"\r\n            highlightOnHover\r\n            pointerOnHover\r\n            persistTableHead\r\n            responsive\r\n          />\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Client {\r\n  constructor(refClient, refCredit, nom, montantAbandonnee, datePassagePerte, caResponsable, agence, type) {\r\n    this.refClient = refClient;\r\n    this.refCredit = refCredit;\r\n    this.nom = nom;\r\n    this.montantAbandonnee = montantAbandonnee;\r\n    this.datePassagePerte = datePassagePerte;\r\n    this.caResponsable = caResponsable;\r\n    this.agence = agence;\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nexport default ClientList;\r\n",["49","50","51","52","53","54"],"C:\\Users\\almiarinantena\\Documents\\remboursement\\frontend\\src\\HistoryPaiment.js",[],[],{"ruleId":"55","severity":1,"message":"56","line":43,"column":33,"nodeType":"57","endLine":43,"endColumn":97},{"ruleId":"55","severity":1,"message":"56","line":44,"column":33,"nodeType":"57","endLine":44,"endColumn":98},{"ruleId":"55","severity":1,"message":"56","line":45,"column":33,"nodeType":"57","endLine":45,"endColumn":104},{"ruleId":"55","severity":1,"message":"56","line":46,"column":33,"nodeType":"57","endLine":46,"endColumn":99},{"ruleId":"58","severity":1,"message":"59","line":11,"column":10,"nodeType":"60","messageId":"61","endLine":11,"endColumn":17},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'dataFil' is assigned a value but never used.","Identifier","unusedVar","dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["74"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-object-constructor"]